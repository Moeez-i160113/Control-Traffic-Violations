abi:
([{"constant":false,"inputs":[{"internalType":"string","name":"a1","type":"string"},{"internalType":"string","name":"a2","type":"string"},{"internalType":"string","name":"a4","type":"string"},{"internalType":"string","name":"a3","type":"string"}],"name":"addInformation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"string","name":"a1","type":"string"},{"internalType":"string","name":"a2","type":"string"},{"internalType":"string","name":"a3","type":"string"}],"name":"editInformation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"getCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getInformation","outputs":[{"internalType":"string","name":"","type":"string"},{"internalType":"string","name":"","type":"string"},{"internalType":"string","name":"","type":"string"},{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"}]

https://ropsten.etherscan.io/tx/0x94eda7e42df8f7ab4151055c5ae6a62bfba5e8d25daef288d1bda4e0312b072f

0x929880aC59628bc4b23007f369E12773644d0F36
0x929880aC59628bc4b23007f369E12773644d0F36

pragma solidity ^0.5.0;
contract PaidInformation {
    uint public count = 0;
    mapping(uint => information) info_table;
    
    struct information{
        string date_submitted;
        string challan_no;
        string transaction_id;
        string bank_name;
    }
    function getCount()public view returns(uint){
        return count;
    }
    
    function getInformation(uint index) public view returns(string memory,string memory,string memory,string memory){
        require(index<count);
        return (info_table[index].date_submitted,info_table[index].challan_no,info_table[index].transaction_id,info_table[index].bank_name);
    }
    function editInformation(uint index,string memory a1,string memory a2,string memory a3) public returns(uint) {
        info_table[index].date_submitted=a1;
        info_table[index].challan_no=a2;
        info_table[index].bank_name=a3;
        return (1);
    }

    function addInformation(string memory a1,string memory a2,string memory a4,string memory a3) public returns  (uint){
        info_table[count] = information(a1,a2,a4,a3);
        count++;
        return count-1;
    }
    
}

